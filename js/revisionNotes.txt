Improvement Opportunities for Next Code Review:
The listing of pizzas, $("ul.pizza-list").prepend() isn't properly targeting the data you need to display. order1.allPizzas[order1.allPizzas.length - 1] is still an object that needs to be parsed through to access size and toppings. I would suggest making this a separate UI function to parse through the data like this:
function showPizza(newPizza){
  $("ul.pizza-list").prepend(`<li class="entered-pizza">Size: ${newPizza.size} | Toppings: ${newPizza.toppings}</li>`);
}

// Remove the list prepend on line 68 and replace with:
showPizza(pizza1)

There is no way to see the price of a specific pizza, all the pizzas are just combined into a grandTotal. Much like toppings and size are an attribute of a Pizza a price should either be stored in an attribute like this.price or there should be a Pizza.prototype method for finding a certain pizzas price.
Make sure to commit more frequently when studying or trying things out. There are a few times during your commits where there is more than an hour gap and not much new code added. For example after your lunch break there was another hour missing from 1:30-2:30, after which this was all that was committed. If you spend a large amount of time studying, please use your README or a separate txt/md file in your project to keep track of what you're studying during the gaps. If you spend a large amount of time trying out things that don't work, please commit what you're trying out. In a work environment you likely will only make commits once something works but this is a learning environment and we want to see that work to: a) See your thought process and help you troubleshoot bugs you had along the way for when meetings are requested and b) Keep track of hours, our certification and agreement with internship companies states that each student completes a certain number of coding hours before going to internships and this is the only way we can track Friday hours. In the future you may be asked to makeup missing hours and marked tardy/left early if your first commit is after 8:30 or your last before 4:30.
Currently there are no prices listed on your site so a user has no idea how much a pizza will cost before ordering it, would be good to add size and topping prices, as well as a note about sales tax.
Specs/tests should always be committed before writing the function that youâ€™re testing.
Resubmission Requirements:
Currently no output is displayed. The jQuery slideUp() method is actually only for hiding elements while the slideDown() is for showing. Please update your method on $("div.show-pizzas") to show the hidden div. Here is a W3 doc that talks about slideUp() usage.
Right now you create a mostly empty pizza object with a size of Large and then add-in/update all the user selected pieces of the object by directly manipulating them from the front end with code like pizza1.size = "small";. This is considered sloppy code and can cause all sorts of problems in a project since the logic isn't properly scoped. Since all your user logic is pulled in at once there is no reason for this not be be a parameter of your Pizza objects constructor. Either create separate prototype methods that take size and toppings, like you do with the addPizza() method, or update your Pizza constructor to require the attributes to be passed in on object creation and then you simply move your pizza creation to inside the form like this:
$("form").submit(function(event) {
    event.preventDefault();

    const sizeSelected = $("input:radio[name=size-select]:checked").val();

    let toppingArray = [];
    $("input:checkbox[name=toppings]:checked").each(function() {
      let topper = $(this).val();
      toppingArray.push(topper);
    });

    let pizza1 = new Pizza(sizeSelected, toppingArray);
}
The form still submits if no size is selected and defaults to a small price. It makes sense that toppings could be optional but size should be a requirement or else pizza1 comes back with non specific properties. You can add the attribute text required or checked to the first radio to have this effect without changing JS logic <input type="radio" name="size" value="small" required>.
README instructions include a "gh-pages" link that isn't setup. Please remove this reference or if you have gh-pages setup add in the working link.
Remove unused code, "View Total" and "Make Change" buttons don't have any use.
Great work Tyler! Your project demonstrates a good utilization of constructors and prototypes, your commits show a good work history, the readme specs are clear, and results are changed in the backend based on user input. There are still a couple issues that are preventing this from passing listed in the resubmission requirements. Be sure to update any of your tests/specs to reflect updates you make to the logic. If you have any questions or concerns please let me know and please resubmit before Monday February 8th.